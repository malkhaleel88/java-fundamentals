/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package basiclibrary;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;


public class Library {

    public static void main(String[] args) {

//        int[] myArray = roll(4);
//        System.out.println(Arrays.toString(myArray));
//        System.out.println(containsDuplicates(myArray));
//        System.out.println(average(myArray));

        int [][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        lowestAverage(weeklyMonthTemperatures);
    }


    public static int[] roll(int numRoll) {

        int[] tryArray = new int[numRoll];

        for (int i = 0; i < tryArray.length; i++) {
            tryArray[i] = (int) (5 * Math.random()) + 1;
        }
        return tryArray;
    }

    public static boolean containsDuplicates(int[] inputArray) {
      boolean status = false;
        for (int i = 0; i < inputArray.length; i++) {
            for (int j = i+1; j < inputArray.length; j++) {
                if (inputArray[i] == inputArray[j]){
                    status = true;
                }
            }
        }
        return status;
    }

    public static double average(int[] inputArray) {
        int sum = 0;
        for (int i = 0; i < inputArray.length; i++) {
            sum = sum + inputArray[i];
        }
        double avg = (double) sum / inputArray.length;
        return avg;
    }

    public static int[] lowestAverage(int[][] array){
        List<Double> averageCollection = new ArrayList<Double>();
        for(int i=0; i<array.length;i++){
            double sum=0;
            for(int j = 0 ; j<array[i].length;j++){
                sum+=array[i][j];
            }
            averageCollection.add(sum/array[i].length);
        }
        System.out.println("The min value is of average at index: "+averageCollection.indexOf(Collections.min(averageCollection)));
        return array[averageCollection.indexOf(Collections.min(averageCollection))];
    }

}